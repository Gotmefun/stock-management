#!/usr/bin/env python3
"""
‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô Google Drive
Check files in Google Drive folder structure
"""

from upload_to_drive import create_drive_uploader

def check_drive_files():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô Google Drive"""
    print("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Drive...")
    
    try:
        uploader = create_drive_uploader()
        
        if not uploader.service:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Drive ‡πÑ‡∏î‡πâ")
            return
        
        print("‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Drive ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å
        print("\nüìÅ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå 'check stock project'...")
        main_folder_id = uploader.get_or_create_main_project_folder()
        
        if main_folder_id:
            print(f"‚úÖ ‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å ID: {main_folder_id}")
            
            # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå Stock Data
            print("\nüìä ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå 'Stock Data'...")
            results = uploader.service.files().list(
                q=f"name='Stock Data' and parents in '{main_folder_id}' and mimeType='application/vnd.google-apps.spreadsheet'",
                fields='files(id, name, webViewLink, createdTime, modifiedTime)'
            ).execute()
            
            files = results.get('files', [])
            
            if files:
                print(f"‚úÖ ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå 'Stock Data' ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {len(files)} ‡πÑ‡∏ü‡∏•‡πå:")
                for file in files:
                    print(f"   üìÑ ‡∏ä‡∏∑‡πà‡∏≠: {file['name']}")
                    print(f"   üÜî ID: {file['id']}")
                    print(f"   üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå: {file['webViewLink']}")
                    print(f"   üìÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: {file['createdTime']}")
                    print(f"   ‚úèÔ∏è  ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: {file['modifiedTime']}")
                    print()
            else:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå 'Stock Data'")
                
                # ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
                print("\nüìã ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå 'check stock project':")
                all_results = uploader.service.files().list(
                    q=f"parents in '{main_folder_id}'",
                    fields='files(id, name, mimeType, webViewLink)'
                ).execute()
                
                all_files = all_results.get('files', [])
                if all_files:
                    for file in all_files:
                        file_type = "üìä" if "spreadsheet" in file['mimeType'] else "üìÅ" if "folder" in file['mimeType'] else "üìÑ"
                        print(f"   {file_type} {file['name']} ({file['mimeType']})")
                        if 'webViewLink' in file:
                            print(f"      üîó {file['webViewLink']}")
                else:
                    print("   (‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå)")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå images
            print("\nüñºÔ∏è  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå 'images'...")
            images_folder_id = uploader.get_or_create_inventory_folder()
            if images_folder_id:
                print(f"‚úÖ ‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå images ID: {images_folder_id}")
                
                # ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                image_results = uploader.service.files().list(
                    q=f"parents in '{images_folder_id}'",
                    fields='files(id, name)'
                ).execute()
                
                image_files = image_results.get('files', [])
                print(f"üì∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: {len(image_files)} ‡πÑ‡∏ü‡∏•‡πå")
            
        else:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å")
            
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

if __name__ == '__main__':
    check_drive_files()