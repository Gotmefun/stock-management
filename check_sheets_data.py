#!/usr/bin/env python3
"""
‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô Google Sheets
"""

from sheets_manager import create_sheets_manager

PRODUCT_SHEET_ID = "17fQBTqiUG6tFH-67its-iaKDV2ef4HLJ9S3BGKTVSdM"

def main():
    print("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Google Sheets...")
    
    sheets_manager = create_sheets_manager()
    if not sheets_manager:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets ‡πÑ‡∏î‡πâ")
        return
    
    try:
        # Check raw data in first 10 rows
        print("üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 10 ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å (A1:Z10):")
        
        result = sheets_manager.sheets_service.spreadsheets().values().get(
            spreadsheetId=PRODUCT_SHEET_ID,
            range='A1:Z10'
        ).execute()
        
        values = result.get('values', [])
        
        for i, row in enumerate(values):
            print(f"Row {i+1}: {row}")
        
        print("\n" + "="*50)
        
        # Check what columns D and E contain
        print("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Column D ‡πÅ‡∏•‡∏∞ E (‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤):")
        
        result_de = sheets_manager.sheets_service.spreadsheets().values().get(
            spreadsheetId=PRODUCT_SHEET_ID,
            range='D1:E20'
        ).execute()
        
        values_de = result_de.get('values', [])
        
        for i, row in enumerate(values_de):
            if len(row) >= 2:
                barcode = row[0] if len(row) > 0 else ''
                name = row[1] if len(row) > 1 else ''
                print(f"Row {i+1}: Barcode='{barcode}', Name='{name}'")
            elif len(row) == 1:
                print(f"Row {i+1}: Only column D='{row[0]}'")
            else:
                print(f"Row {i+1}: Empty row")
        
        print("\n" + "="*50)
        
        # Test the current method
        print("üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö get_all_products() ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:")
        products = sheets_manager.get_all_products(PRODUCT_SHEET_ID)
        print(f"üì¶ ‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ {len(products)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        
        for i, product in enumerate(products[:5]):
            print(f"Product {i+1}: {product}")
            if i >= 4:  # Show only first 5
                break
                
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()