#!/usr/bin/env python3
"""
Debug Production Error 500 - Stock Counting Submit
"""

import requests
import json

def test_production_api():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö API ‡πÉ‡∏ô Production Environment"""
    print("üîß Debug Production Error 500...")
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á session ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏≥‡∏•‡∏≠‡∏á browser
    session = requests.Session()
    
    try:
        # Step 1: ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏Å‡πà‡∏≠‡∏ô
        print("1Ô∏è‚É£ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å...")
        home_response = session.get("https://www.ptee88.com", timeout=10)
        print(f"   Status: {home_response.status_code}")
        
        # Step 2: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏ô‡πâ‡∏≤ login
        print("2Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏ô‡πâ‡∏≤ login...")
        login_page = session.get("https://www.ptee88.com/login", timeout=10)
        print(f"   Status: {login_page.status_code}")
        
        # Step 3: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API get_product (‡πÑ‡∏°‡πà login ‡∏à‡∏∞ redirect)
        print("3Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API get_product...")
        product_response = session.get("https://www.ptee88.com/get_product/%23808", 
                                     allow_redirects=False, timeout=10)
        print(f"   Status: {product_response.status_code}")
        
        if product_response.status_code == 302:
            print("   ‚úÖ API redirect ‡∏õ‡∏Å‡∏ï‡∏¥ (‡∏ï‡πâ‡∏≠‡∏á login)")
        
        # Step 4: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö submit_stock API
        print("4Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö submit_stock API...")
        test_data = {
            "barcode": "#808",
            "product_name": "Test Product",
            "quantity": 10,
            "branch": "‡∏™‡∏≤‡∏Ç‡∏≤‡∏´‡∏•‡∏±‡∏Å",
            "counter_name": "Test User"
        }
        
        submit_response = session.post(
            "https://www.ptee88.com/submit_stock",
            json=test_data,
            headers={'Content-Type': 'application/json'},
            allow_redirects=False,
            timeout=10
        )
        
        print(f"   Status: {submit_response.status_code}")
        
        if submit_response.status_code == 500:
            print("   ‚ùå Error 500 ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô!")
            print(f"   Response: {submit_response.text[:200]}...")
        elif submit_response.status_code == 302:
            print("   ‚ö†Ô∏è Redirect (‡∏ï‡πâ‡∏≠‡∏á login)")
        
    except Exception as e:
        print(f"‚ùå Connection error: {e}")

def check_common_500_causes():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏Ç‡∏≠‡∏á Error 500"""
    print("\nüîç ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏á Error 500:")
    
    print("\n1. üîë Environment Variables:")
    print("   - SUPABASE_URL ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    print("   - SUPABASE_ANON_KEY ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡πÅ‡∏Å‡πâ‡πÅ‡∏•‡πâ‡∏ß)")
    print("   - SECRET_KEY ‡πÑ‡∏°‡πà‡∏°‡∏µ")
    
    print("\n2. üì¶ Missing Dependencies:")
    print("   - supabase client ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á")
    print("   - python module import error")
    
    print("\n3. üóÑÔ∏è Database Issues:")
    print("   - ‡∏ï‡∏≤‡∏£‡∏≤‡∏á stock_counts ‡πÑ‡∏°‡πà‡∏°‡∏µ")
    print("   - ‡∏ï‡∏≤‡∏£‡∏≤‡∏á branches ‡πÑ‡∏°‡πà‡∏°‡∏µ") 
    print("   - Foreign key constraint error")
    
    print("\n4. üìÅ File Issues:")
    print("   - credentials.json ‡πÑ‡∏°‡πà‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î")
    print("   - supabase_manager.py missing")
    
    print("\n5. üîß Code Issues:")
    print("   - Python syntax error")
    print("   - Import statement error")
    print("   - Function call error")

def show_debugging_steps():
    """‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£ Debug"""
    print("\nüõ†Ô∏è ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Error 500:")
    
    print("\n1Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Render Logs:")
    print("   - Render Dashboard > Service ptee88")
    print("   - ‡πÅ‡∏ó‡πá‡∏ö 'Logs'")
    print("   - ‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏°‡∏µ Error message ‡∏≠‡∏∞‡πÑ‡∏£")
    print("   - ‡∏î‡∏π Python traceback")
    
    print("\n2Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Environment Variables:")
    print("   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SUPABASE_URL")
    print("   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SUPABASE_ANON_KEY ‡πÉ‡∏´‡∏°‡πà")
    print("   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏µ credentials.json ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà")
    
    print("\n3Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Dependencies:")
    print("   - requirements.txt ‡∏°‡∏µ supabase>=2.0.0")
    print("   - Deploy log ‡πÅ‡∏™‡∏î‡∏á successful install")
    
    print("\n4Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Supabase Tables:")
    print("   - ‡πÄ‡∏Ç‡πâ‡∏≤ Supabase Dashboard")
    print("   - Table Editor > stock_counts table ‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà")
    print("   - Table Editor > branches table ‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà")
    
    print("\n5Ô∏è‚É£ Minimal Test:")
    print("   - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç submit_stock ‡πÉ‡∏´‡πâ return ‡∏á‡πà‡∏≤‡∏¢ ‡πÜ ‡∏Å‡πà‡∏≠‡∏ô")
    print("   - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ API ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á 200")
    print("   - ‡∏Ñ‡πà‡∏≠‡∏¢ ‡πÜ ‡πÄ‡∏û‡∏¥‡πà‡∏° functionality")

def create_simple_fix():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß"""
    print("\nüí° ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß - Simplified submit_stock:")
    print("""
# ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà submit_stock function ‡πÉ‡∏ô app.py ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß:

@app.route('/submit_stock', methods=['POST'])
@staff_required
def submit_stock():
    try:
        data = request.get_json()
        print(f"Received data: {data}")
        
        # Basic validation
        if not data or not data.get('barcode') or not data.get('quantity'):
            return jsonify({'error': 'Missing required fields'}), 400
        
        # Simple success response (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏à‡∏£‡∏¥‡∏á)
        return jsonify({
            'success': True, 
            'message': 'Test successful',
            'data': data
        })
        
    except Exception as e:
        print(f"Error in submit_stock: {e}")
        import traceback
        traceback.print_exc()
        return jsonify({'error': f'Server error: {str(e)}'}), 500
""")

if __name__ == "__main__":
    print("üö® Production Error 500 Debugging")
    print("=" * 50)
    
    test_production_api()
    check_common_500_causes()
    show_debugging_steps()
    create_simple_fix()
    
    print("\n" + "=" * 50)
    print("üéØ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å - ‡∏î‡∏π Render Logs:")
    print("1. ‡πÄ‡∏Ç‡πâ‡∏≤ https://dashboard.render.com")
    print("2. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Service 'ptee88'") 
    print("3. ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏ó‡πá‡∏ö 'Logs'")
    print("4. ‡∏•‡∏≠‡∏á‡∏Å‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà")
    print("5. ‡∏î‡∏π Error message ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô Logs")
    print("6. ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏° Error message ‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠")