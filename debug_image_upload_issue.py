#!/usr/bin/env python3
"""
Debug image upload issue
‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
"""

import requests
import json
import base64
import time

def test_apps_script_directly():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö Google Apps Script ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á"""
    
    APPS_SCRIPT_URL = "https://script.google.com/macros/s/AKfycbxaVXe5bMs7tw8n5iUZ_l4D4aeGJk-bEFT-QNpTe87XXGRvwhBCB4go9u9e9ddJ364/exec"
    
    print("üîß ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Google Apps Script ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á")
    print("=" * 50)
    print(f"URL: {APPS_SCRIPT_URL}")
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏õ‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    test_image_data = "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg=="
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö CITY folder
    payload = {
        'imageData': f"data:image/png;base64,{test_image_data}",
        'filename': f'debug_city_{int(time.time())}.png',
        'folder': 'Check Stock Project/‡∏™‡∏≤‡∏Ç‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏°‡∏∑‡∏≠‡∏á'
    }
    
    print(f"üìÅ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå: {payload['folder']}")
    print(f"üìÑ ‡πÑ‡∏ü‡∏•‡πå: {payload['filename']}")
    
    try:
        response = requests.post(
            APPS_SCRIPT_URL,
            json=payload,
            timeout=30,
            headers={'Content-Type': 'application/json'}
        )
        
        print(f"üìä Response Status: {response.status_code}")
        
        if response.status_code == 200:
            try:
                result = response.json()
                print(f"üìÑ Response: {json.dumps(result, indent=2, ensure_ascii=False)}")
                
                if result.get('success'):
                    print(f"‚úÖ Apps Script ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥")
                    print(f"üîó Google Drive URL: {result.get('webViewLink')}")
                    print(f"üìÇ ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå: {result.get('folder')}")
                    return True, result.get('webViewLink')
                else:
                    print(f"‚ùå Apps Script Error: {result.get('error')}")
                    return False, None
            except json.JSONDecodeError as e:
                print(f"‚ùå JSON Error: {e}")
                print(f"Response text: {response.text}")
                return False, None
        else:
            print(f"‚ùå HTTP Error: {response.status_code}")
            print(f"Response: {response.text}")
            return False, None
            
    except Exception as e:
        print(f"‚ùå Exception: {e}")
        return False, None

def test_production_upload():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ú‡πà‡∏≤‡∏ô production"""
    
    BASE_URL = "https://www.ptee88.com"
    
    print("\nüåê ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ú‡πà‡∏≤‡∏ô Production")
    print("=" * 50)
    
    # Login
    session = requests.Session()
    login_data = {
        'username': 'admin',
        'password': 'Teeomega2014'
    }
    
    try:
        login_response = session.post(f'{BASE_URL}/login', data=login_data, timeout=30)
        if login_response.status_code != 200:
            print("‚ùå Login failed")
            return False
        print("‚úÖ Login successful")
    except Exception as e:
        print(f"‚ùå Login error: {e}")
        return False
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ
    test_image_data = "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg=="
    
    stock_data = {
        'barcode': f'DEBUG{int(time.time())}',
        'quantity': 5,
        'branch': 'CITY',  # ‡πÉ‡∏ä‡πâ CITY code
        'product_name': 'Debug Test Product',
        'counter_name': 'Debug Tester',
        'image_data': f'data:image/png;base64,{test_image_data}'
    }
    
    print(f"üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:")
    print(f"  Branch: {stock_data['branch']}")
    print(f"  Barcode: {stock_data['barcode']}")
    print(f"  Image data length: {len(stock_data['image_data'])}")
    
    try:
        response = session.post(
            f'{BASE_URL}/submit_stock',
            json=stock_data,
            headers={'Content-Type': 'application/json'},
            timeout=60
        )
        
        print(f"üìä Response Status: {response.status_code}")
        
        if response.status_code == 200:
            try:
                result = response.json()
                print(f"üìÑ Response: {json.dumps(result, indent=2, ensure_ascii=False)}")
                
                if result.get('success'):
                    print("‚úÖ Production upload successful")
                    saved_to = result.get('saved_to', {})
                    print(f"üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô:")
                    print(f"  - Supabase: {saved_to.get('supabase', False)}")
                    print(f"  - Sheets: {saved_to.get('sheets', False)}")
                    return True
                else:
                    print(f"‚ùå Upload failed: {result.get('error')}")
                    return False
                    
            except json.JSONDecodeError as e:
                print(f"‚ùå JSON Error: {e}")
                print(f"Response text: {response.text}")
                return False
        else:
            print(f"‚ùå HTTP Error: {response.status_code}")
            print(f"Response: {response.text[:500]}...")
            return False
            
    except Exception as e:
        print(f"‚ùå Exception: {e}")
        return False

def check_supabase_data():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Supabase"""
    
    print("\nüíæ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Supabase")
    print("=" * 30)
    
    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    BASE_URL = "https://www.ptee88.com"
    
    session = requests.Session()
    login_data = {
        'username': 'admin',
        'password': 'Teeomega2014'
    }
    
    try:
        # Login
        login_response = session.post(f'{BASE_URL}/login', data=login_data, timeout=30)
        if login_response.status_code != 200:
            print("‚ùå Login failed")
            return
        
        # ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡πà‡∏≤‡∏ô dashboard ‡∏´‡∏£‡∏∑‡∏≠ API
        dashboard_response = session.get(f'{BASE_URL}/dashboard', timeout=30)
        if dashboard_response.status_code == 200:
            print("‚úÖ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á Dashboard ‡πÑ‡∏î‡πâ")
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if 'image_url' in dashboard_response.text.lower():
                print("üì∑ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• image_url ‡πÉ‡∏ô Dashboard")
            else:
                print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• image_url ‡πÉ‡∏ô Dashboard")
        else:
            print(f"‚ö†Ô∏è Dashboard access issue: {dashboard_response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Supabase check error: {e}")

def main():
    """Main debugging function"""
    
    print("üîç Debug Image Upload Issue")
    print("üïê " + time.strftime("%Y-%m-%d %H:%M:%S"))
    print("=" * 60)
    
    print("üéØ ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö:")
    print("1. Supabase ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ")
    print("2. ‡∏£‡∏π‡∏õ‡πÑ‡∏°‡πà‡πÑ‡∏õ‡∏ó‡∏µ‡πà Google Drive ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå CITY")
    print("")
    
    # Test 1: Apps Script
    print("=" * 60)
    apps_script_success, drive_url = test_apps_script_directly()
    
    # Test 2: Production Upload
    print("=" * 60)
    production_success = test_production_upload()
    
    # Test 3: Supabase Data
    print("=" * 60)
    check_supabase_data()
    
    # Summary
    print("\n" + "=" * 60)
    print("üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:")
    print("=" * 60)
    
    print(f"üîß Google Apps Script: {'‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô' if apps_script_success else '‚ùå ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤'}")
    if drive_url:
        print(f"   Google Drive URL: {drive_url}")
        
    print(f"üåê Production Upload: {'‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô' if production_success else '‚ùå ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤'}")
    
    print("\nüîç ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ:")
    
    if apps_script_success and not production_success:
        print("‚ö†Ô∏è Apps Script ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÅ‡∏ï‡πà Production ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
        print("   ‚Üí ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Environment Variables ‡πÉ‡∏ô Render.com")
        print("   ‚Üí ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö APPS_SCRIPT_URL")
        
    elif not apps_script_success:
        print("‚ö†Ô∏è Google Apps Script ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤")
        print("   ‚Üí ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Google Apps Script code")
        print("   ‚Üí ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö permissions")
        
    else:
        print("üéØ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ - ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß")
    
    print("\nüõ†Ô∏è ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:")
    print("1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Google Apps Script logs")
    print("2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Render.com deployment logs") 
    print("3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö APPS_SCRIPT_URL ‡πÉ‡∏ô Environment Variables")
    print("4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö manual deploy ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
    
    print(f"\nüèÅ Debug completed at {time.strftime('%Y-%m-%d %H:%M:%S')}")

if __name__ == "__main__":
    main()